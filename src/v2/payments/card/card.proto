syntax = "proto3";
package card_v2;

import "google/api/annotations.proto";

option go_package = "github.com/iamport/interface/gen_src/go/v2/payments/card";
option csharp_namespace = "V2.Payments.Card";

service PaymentCardService {
    rpc CardRegisterV2RPC(CardRegisterRequest) returns (CardRegisterResponse) {
        option (google.api.http) = {
            post: "/api/payments/v2/card/info"
            body: "*"
        };
    }

    rpc GetCardInfoV2RPC(GetCardInfoRequest) returns (GetCardInfoResponse) {
        option (google.api.http) = {
            get: "/api/payments/v2/card/info/{card_uid}"
        };
    }

    rpc DeleteCardInfoV2RPC(DeleteCardInfoRequest) returns (DeleteCardInfoResponse) {
        option (google.api.http) = {
            delete: "/api/payments/v2/card/info/{card_uid}"
        };
    }

    rpc PayByRegiseteredCardV2RPC(PayByRegisteredCardRequest) returns (PayByRegisteredCardResponse) {
        option (google.api.http) = {
            post: "/api/payments/v2/card/pay/registered"
        };
    }

    rpc CancelRegiseteredCardV2RPC(CancelCardPaymentRequest) returns (CancelCardPaymenttResponse) {
        option (google.api.http) = {
            post: "/api/payments/v2/card/cancel/registered/{imp_uid}"
        };
    }
}

message CardRegisterRequest {
    string card_uid = 1; // a.k.a.) customer_uid
    string card_number = 2;
    string expiry = 3;
    string birth = 4;
    string pwd_2digit = 5;
    string customer_name = 6;
    string customer_tel = 7;
    string customer_email = 8;
    string customer_addr = 9;
    string customer_postcode = 10;
    string pg = 11;
}

message CardRegisterResultData {
    string card_uid = 1;
    string card_name = 2; // card alias of the user
    string card_code = 3;
    string bin_numbrer = 4; // Only masked company can provide
    int32 card_type = 5;
    string customer_name = 6;
    string customer_tel = 7;
    string customer_email = 8;
    string customer_addr = 9;
    string customer_postcode = 10;
    int32 inserted = 11;
    int32 updated = 12;
    string pg_provider = 13;
    string pg_id = 14;
}

message CardRegisterResponse {
    int32 code = 1;
    string message = 2;
    CardRegisterResultData response = 3;
}

message GetCardInfoRequest {
    string card_uid = 1;
}

message GetCardInfoData {
    string card_uid = 1;
    string card_provider = 2;
    string card_code = 3;
    string bin_number = 4;
    int32 card_type = 5;
    string customer_name = 6;
    string customer_tel = 7;
    string customer_email = 8;
    string customer_addr = 9;
    string customer_postcode = 10;
    int32 inserted = 11;
    int32 updated = 12;
}

message GetCardInfoResponse {
    int32 code = 1;
    string message = 2;
    GetCardInfoData response = 3;
}

message DeleteCardInfoRequest {
    string card_uid = 1;
}

message DeleteCardInfoResponse {
    int32 code = 1;
    string message = 2;
}

message PayByRegisteredCardRequest {
    string card_uid = 1;
    string merchant_uid = 2;
    string amount = 3;
    string tax_free_amount = 4;
    string order_name = 5; // a.k.a.) name
    int32 card_installment = 6; // a.k.a.) card_quota
    bool interest_free_by_merchant = 7;
    string custom_data = 8;
    string callback_url = 9;
    string buyer_addr = 10;
    string buyer_email = 11;
    string buyer_name = 12;
    string buyer_postcode = 13;
    string buyer_tel = 14;
}

message PayByRegisteredCardData {
    string amount = 1;
    string apply_num = 2;
    string buyer_addr = 3;
    string buyer_email = 4;
    string buyer_name = 5;
    string buyer_postcode = 6;
    string buyer_tel = 7;
    string cancel_amount = 8;
    repeated CancelHistory cancel_history = 9;
    string cancel_reason = 10;
    repeated string cancel_receipt_urls = 11;
    int32 cancelled_at = 12;
    string card_code = 13;
    string card_name = 14;
    string bin_number = 15;
    int32 card_installment = 16;
    int32 card_type = 17;
    bool cash_receipt_issued = 18;
    string channel = 19;
    string currency = 20;
    string custom_data = 21;
    string card_uid = 22; // a.k.a.) customer_uid
    string customer_uid_usage = 23;
    string fail_reason = 24;
    int32 failed_at = 25;
    string imp_uid = 26;
    string merchant_uid = 27;
    string order_name = 28;
    int32 paid_at = 29;
    string pay_method = 30;
    string pg_id = 31;
    string pg_provider = 32;
    string pg_tid = 33;
    string receipt_url = 34;
    int32 started_at = 35;
    string status = 36;
    string user_agent = 37;
}

message PayByRegisteredCardResponse {
    int32 code = 1;
    string message = 2;
    PayByRegisteredCardData response = 3;
}

message CancelHistory {
    string pg_tid = 1;
    string amount = 2;
    int32 cancelled_at = 3;
    string reason = 4;
    string receipt_url = 5;
}

message CancelCardPaymentRequest {
    string imp_uid = 1;
    string amount = 2;
    string merchant_uid = 3;
    string tax_free_amount = 4;
    string reason = 5;
}

message CancelCardPaymenttResponse {
    int32 code = 1;
    string message = 2;
    PayByRegisteredCardData response = 3;
}

