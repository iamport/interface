// source: iamport/iamport.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var authenticate_token_pb = require('../authenticate/token_pb.js');
goog.object.extend(proto, authenticate_token_pb);
var payment_payment_pb = require('../payment/payment_pb.js');
goog.object.extend(proto, payment_payment_pb);
goog.exportSymbol('proto.iamport.Response', null, global);
goog.exportSymbol('proto.iamport.Response.ResponseCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.iamport.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.iamport.Response.oneofGroups_);
};
goog.inherits(proto.iamport.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.iamport.Response.displayName = 'proto.iamport.Response';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.iamport.Response.oneofGroups_ = [[3,4,5,6]];

/**
 * @enum {number}
 */
proto.iamport.Response.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  TOKEN: 3,
  PAYMENT: 4,
  PAYMENT_LIST: 5,
  PAYMENT_PAGE: 6
};

/**
 * @return {proto.iamport.Response.ResponseCase}
 */
proto.iamport.Response.prototype.getResponseCase = function() {
  return /** @type {proto.iamport.Response.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.iamport.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.iamport.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.iamport.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.iamport.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iamport.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    token: (f = msg.getToken()) && authenticate_token_pb.Token.toObject(includeInstance, f),
    payment: (f = msg.getPayment()) && payment_payment_pb.Payment.toObject(includeInstance, f),
    paymentList: (f = msg.getPaymentList()) && payment_payment_pb.PaymentList.toObject(includeInstance, f),
    paymentPage: (f = msg.getPaymentPage()) && payment_payment_pb.PaymentPage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.iamport.Response}
 */
proto.iamport.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.iamport.Response;
  return proto.iamport.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.iamport.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.iamport.Response}
 */
proto.iamport.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new authenticate_token_pb.Token;
      reader.readMessage(value,authenticate_token_pb.Token.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    case 4:
      var value = new payment_payment_pb.Payment;
      reader.readMessage(value,payment_payment_pb.Payment.deserializeBinaryFromReader);
      msg.setPayment(value);
      break;
    case 5:
      var value = new payment_payment_pb.PaymentList;
      reader.readMessage(value,payment_payment_pb.PaymentList.deserializeBinaryFromReader);
      msg.setPaymentList(value);
      break;
    case 6:
      var value = new payment_payment_pb.PaymentPage;
      reader.readMessage(value,payment_payment_pb.PaymentPage.deserializeBinaryFromReader);
      msg.setPaymentPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.iamport.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.iamport.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.iamport.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.iamport.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      authenticate_token_pb.Token.serializeBinaryToWriter
    );
  }
  f = message.getPayment();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      payment_payment_pb.Payment.serializeBinaryToWriter
    );
  }
  f = message.getPaymentList();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      payment_payment_pb.PaymentList.serializeBinaryToWriter
    );
  }
  f = message.getPaymentPage();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      payment_payment_pb.PaymentPage.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.iamport.Response.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.iamport.Response} returns this
 */
proto.iamport.Response.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.iamport.Response.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.iamport.Response} returns this
 */
proto.iamport.Response.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional authenticate.Token token = 3;
 * @return {?proto.authenticate.Token}
 */
proto.iamport.Response.prototype.getToken = function() {
  return /** @type{?proto.authenticate.Token} */ (
    jspb.Message.getWrapperField(this, authenticate_token_pb.Token, 3));
};


/**
 * @param {?proto.authenticate.Token|undefined} value
 * @return {!proto.iamport.Response} returns this
*/
proto.iamport.Response.prototype.setToken = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.iamport.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iamport.Response} returns this
 */
proto.iamport.Response.prototype.clearToken = function() {
  return this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iamport.Response.prototype.hasToken = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional payment.Payment payment = 4;
 * @return {?proto.payment.Payment}
 */
proto.iamport.Response.prototype.getPayment = function() {
  return /** @type{?proto.payment.Payment} */ (
    jspb.Message.getWrapperField(this, payment_payment_pb.Payment, 4));
};


/**
 * @param {?proto.payment.Payment|undefined} value
 * @return {!proto.iamport.Response} returns this
*/
proto.iamport.Response.prototype.setPayment = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.iamport.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iamport.Response} returns this
 */
proto.iamport.Response.prototype.clearPayment = function() {
  return this.setPayment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iamport.Response.prototype.hasPayment = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional payment.PaymentList payment_list = 5;
 * @return {?proto.payment.PaymentList}
 */
proto.iamport.Response.prototype.getPaymentList = function() {
  return /** @type{?proto.payment.PaymentList} */ (
    jspb.Message.getWrapperField(this, payment_payment_pb.PaymentList, 5));
};


/**
 * @param {?proto.payment.PaymentList|undefined} value
 * @return {!proto.iamport.Response} returns this
*/
proto.iamport.Response.prototype.setPaymentList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.iamport.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iamport.Response} returns this
 */
proto.iamport.Response.prototype.clearPaymentList = function() {
  return this.setPaymentList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iamport.Response.prototype.hasPaymentList = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional payment.PaymentPage payment_page = 6;
 * @return {?proto.payment.PaymentPage}
 */
proto.iamport.Response.prototype.getPaymentPage = function() {
  return /** @type{?proto.payment.PaymentPage} */ (
    jspb.Message.getWrapperField(this, payment_payment_pb.PaymentPage, 6));
};


/**
 * @param {?proto.payment.PaymentPage|undefined} value
 * @return {!proto.iamport.Response} returns this
*/
proto.iamport.Response.prototype.setPaymentPage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.iamport.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.iamport.Response} returns this
 */
proto.iamport.Response.prototype.clearPaymentPage = function() {
  return this.setPaymentPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.iamport.Response.prototype.hasPaymentPage = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.iamport);
