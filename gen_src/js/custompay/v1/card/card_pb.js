// source: custompay/v1/card/card.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var custompay_v1_basic_basic_pb = require('../../../custompay/v1/basic/basic_pb.js');
goog.object.extend(proto, custompay_v1_basic_basic_pb);
var v1_subscribe_subscribe_pb = require('../../../v1/subscribe/subscribe_pb.js');
goog.object.extend(proto, v1_subscribe_subscribe_pb);
var v1_payment_payment_pb = require('../../../v1/payment/payment_pb.js');
goog.object.extend(proto, v1_payment_payment_pb);
goog.exportSymbol('proto.card_custompay.Card', null, global);
goog.exportSymbol('proto.card_custompay.CardAllInfoResponse', null, global);
goog.exportSymbol('proto.card_custompay.CardCancelRequest', null, global);
goog.exportSymbol('proto.card_custompay.CardEditRequest', null, global);
goog.exportSymbol('proto.card_custompay.CardIdx', null, global);
goog.exportSymbol('proto.card_custompay.CardPayRequest', null, global);
goog.exportSymbol('proto.card_custompay.CardRegisterRequest', null, global);
goog.exportSymbol('proto.card_custompay.CardRegisterResponse', null, global);
goog.exportSymbol('proto.card_custompay.CardRequest', null, global);
goog.exportSymbol('proto.card_custompay.CardResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_custompay.CardIdx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_custompay.CardIdx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_custompay.CardIdx.displayName = 'proto.card_custompay.CardIdx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_custompay.Card = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_custompay.Card, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_custompay.Card.displayName = 'proto.card_custompay.Card';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_custompay.CardRegisterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_custompay.CardRegisterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_custompay.CardRegisterRequest.displayName = 'proto.card_custompay.CardRegisterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_custompay.CardRegisterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_custompay.CardRegisterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_custompay.CardRegisterResponse.displayName = 'proto.card_custompay.CardRegisterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_custompay.CardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_custompay.CardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_custompay.CardResponse.displayName = 'proto.card_custompay.CardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_custompay.CardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_custompay.CardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_custompay.CardRequest.displayName = 'proto.card_custompay.CardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_custompay.CardAllInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.card_custompay.CardAllInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.card_custompay.CardAllInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_custompay.CardAllInfoResponse.displayName = 'proto.card_custompay.CardAllInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_custompay.CardEditRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_custompay.CardEditRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_custompay.CardEditRequest.displayName = 'proto.card_custompay.CardEditRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_custompay.CardPayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_custompay.CardPayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_custompay.CardPayRequest.displayName = 'proto.card_custompay.CardPayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.card_custompay.CardCancelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.card_custompay.CardCancelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.card_custompay.CardCancelRequest.displayName = 'proto.card_custompay.CardCancelRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_custompay.CardIdx.prototype.toObject = function(opt_includeInstance) {
  return proto.card_custompay.CardIdx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_custompay.CardIdx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardIdx.toObject = function(includeInstance, msg) {
  var f, obj = {
    idx: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_custompay.CardIdx}
 */
proto.card_custompay.CardIdx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_custompay.CardIdx;
  return proto.card_custompay.CardIdx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_custompay.CardIdx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_custompay.CardIdx}
 */
proto.card_custompay.CardIdx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_custompay.CardIdx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_custompay.CardIdx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_custompay.CardIdx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardIdx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 idx = 1;
 * @return {number}
 */
proto.card_custompay.CardIdx.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_custompay.CardIdx} returns this
 */
proto.card_custompay.CardIdx.prototype.setIdx = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_custompay.Card.prototype.toObject = function(opt_includeInstance) {
  return proto.card_custompay.Card.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_custompay.Card} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.Card.toObject = function(includeInstance, msg) {
  var f, obj = {
    idx: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cardUid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    binNumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    provider: jspb.Message.getFieldWithDefault(msg, 4, ""),
    alias: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_custompay.Card}
 */
proto.card_custompay.Card.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_custompay.Card;
  return proto.card_custompay.Card.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_custompay.Card} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_custompay.Card}
 */
proto.card_custompay.Card.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdx(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardUid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBinNumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_custompay.Card.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_custompay.Card.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_custompay.Card} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.Card.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdx();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCardUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBinNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAlias();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 idx = 1;
 * @return {number}
 */
proto.card_custompay.Card.prototype.getIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_custompay.Card} returns this
 */
proto.card_custompay.Card.prototype.setIdx = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string card_uid = 2;
 * @return {string}
 */
proto.card_custompay.Card.prototype.getCardUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.Card} returns this
 */
proto.card_custompay.Card.prototype.setCardUid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bin_number = 3;
 * @return {string}
 */
proto.card_custompay.Card.prototype.getBinNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.Card} returns this
 */
proto.card_custompay.Card.prototype.setBinNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string provider = 4;
 * @return {string}
 */
proto.card_custompay.Card.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.Card} returns this
 */
proto.card_custompay.Card.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string alias = 5;
 * @return {string}
 */
proto.card_custompay.Card.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.Card} returns this
 */
proto.card_custompay.Card.prototype.setAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_custompay.CardRegisterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.card_custompay.CardRegisterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_custompay.CardRegisterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardRegisterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardIdx: jspb.Message.getFieldWithDefault(msg, 1, ""),
    alias: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customerUid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pg: jspb.Message.getFieldWithDefault(msg, 4, ""),
    expiry: jspb.Message.getFieldWithDefault(msg, 5, ""),
    birth: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pwd2digit: jspb.Message.getFieldWithDefault(msg, 7, ""),
    customerName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    customerTel: jspb.Message.getFieldWithDefault(msg, 9, ""),
    customerEmail: jspb.Message.getFieldWithDefault(msg, 10, ""),
    customerAddr: jspb.Message.getFieldWithDefault(msg, 11, ""),
    customerPostcode: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_custompay.CardRegisterRequest}
 */
proto.card_custompay.CardRegisterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_custompay.CardRegisterRequest;
  return proto.card_custompay.CardRegisterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_custompay.CardRegisterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_custompay.CardRegisterRequest}
 */
proto.card_custompay.CardRegisterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardIdx(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPg(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiry(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBirth(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPwd2digit(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerTel(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerEmail(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerAddr(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerPostcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_custompay.CardRegisterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_custompay.CardRegisterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_custompay.CardRegisterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardRegisterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardIdx();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAlias();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomerUid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPg();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExpiry();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBirth();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPwd2digit();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCustomerName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCustomerTel();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCustomerEmail();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCustomerAddr();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCustomerPostcode();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string card_idx = 1;
 * @return {string}
 */
proto.card_custompay.CardRegisterRequest.prototype.getCardIdx = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardRegisterRequest} returns this
 */
proto.card_custompay.CardRegisterRequest.prototype.setCardIdx = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string alias = 2;
 * @return {string}
 */
proto.card_custompay.CardRegisterRequest.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardRegisterRequest} returns this
 */
proto.card_custompay.CardRegisterRequest.prototype.setAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string customer_uid = 3;
 * @return {string}
 */
proto.card_custompay.CardRegisterRequest.prototype.getCustomerUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardRegisterRequest} returns this
 */
proto.card_custompay.CardRegisterRequest.prototype.setCustomerUid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string pg = 4;
 * @return {string}
 */
proto.card_custompay.CardRegisterRequest.prototype.getPg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardRegisterRequest} returns this
 */
proto.card_custompay.CardRegisterRequest.prototype.setPg = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string expiry = 5;
 * @return {string}
 */
proto.card_custompay.CardRegisterRequest.prototype.getExpiry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardRegisterRequest} returns this
 */
proto.card_custompay.CardRegisterRequest.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string birth = 6;
 * @return {string}
 */
proto.card_custompay.CardRegisterRequest.prototype.getBirth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardRegisterRequest} returns this
 */
proto.card_custompay.CardRegisterRequest.prototype.setBirth = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string pwd_2digit = 7;
 * @return {string}
 */
proto.card_custompay.CardRegisterRequest.prototype.getPwd2digit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardRegisterRequest} returns this
 */
proto.card_custompay.CardRegisterRequest.prototype.setPwd2digit = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string customer_name = 8;
 * @return {string}
 */
proto.card_custompay.CardRegisterRequest.prototype.getCustomerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardRegisterRequest} returns this
 */
proto.card_custompay.CardRegisterRequest.prototype.setCustomerName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string customer_tel = 9;
 * @return {string}
 */
proto.card_custompay.CardRegisterRequest.prototype.getCustomerTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardRegisterRequest} returns this
 */
proto.card_custompay.CardRegisterRequest.prototype.setCustomerTel = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string customer_email = 10;
 * @return {string}
 */
proto.card_custompay.CardRegisterRequest.prototype.getCustomerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardRegisterRequest} returns this
 */
proto.card_custompay.CardRegisterRequest.prototype.setCustomerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string customer_addr = 11;
 * @return {string}
 */
proto.card_custompay.CardRegisterRequest.prototype.getCustomerAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardRegisterRequest} returns this
 */
proto.card_custompay.CardRegisterRequest.prototype.setCustomerAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string customer_postcode = 12;
 * @return {string}
 */
proto.card_custompay.CardRegisterRequest.prototype.getCustomerPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardRegisterRequest} returns this
 */
proto.card_custompay.CardRegisterRequest.prototype.setCustomerPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_custompay.CardRegisterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.card_custompay.CardRegisterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_custompay.CardRegisterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardRegisterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.card_custompay.CardIdx.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_custompay.CardRegisterResponse}
 */
proto.card_custompay.CardRegisterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_custompay.CardRegisterResponse;
  return proto.card_custompay.CardRegisterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_custompay.CardRegisterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_custompay.CardRegisterResponse}
 */
proto.card_custompay.CardRegisterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.card_custompay.CardIdx;
      reader.readMessage(value,proto.card_custompay.CardIdx.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_custompay.CardRegisterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_custompay.CardRegisterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_custompay.CardRegisterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardRegisterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.card_custompay.CardIdx.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.card_custompay.CardRegisterResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_custompay.CardRegisterResponse} returns this
 */
proto.card_custompay.CardRegisterResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.card_custompay.CardRegisterResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardRegisterResponse} returns this
 */
proto.card_custompay.CardRegisterResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CardIdx response = 3;
 * @return {?proto.card_custompay.CardIdx}
 */
proto.card_custompay.CardRegisterResponse.prototype.getResponse = function() {
  return /** @type{?proto.card_custompay.CardIdx} */ (
    jspb.Message.getWrapperField(this, proto.card_custompay.CardIdx, 3));
};


/**
 * @param {?proto.card_custompay.CardIdx|undefined} value
 * @return {!proto.card_custompay.CardRegisterResponse} returns this
*/
proto.card_custompay.CardRegisterResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.card_custompay.CardRegisterResponse} returns this
 */
proto.card_custompay.CardRegisterResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.card_custompay.CardRegisterResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_custompay.CardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.card_custompay.CardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_custompay.CardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.card_custompay.Card.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_custompay.CardResponse}
 */
proto.card_custompay.CardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_custompay.CardResponse;
  return proto.card_custompay.CardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_custompay.CardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_custompay.CardResponse}
 */
proto.card_custompay.CardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.card_custompay.Card;
      reader.readMessage(value,proto.card_custompay.Card.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_custompay.CardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_custompay.CardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_custompay.CardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.card_custompay.Card.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.card_custompay.CardResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_custompay.CardResponse} returns this
 */
proto.card_custompay.CardResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.card_custompay.CardResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardResponse} returns this
 */
proto.card_custompay.CardResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Card response = 3;
 * @return {?proto.card_custompay.Card}
 */
proto.card_custompay.CardResponse.prototype.getResponse = function() {
  return /** @type{?proto.card_custompay.Card} */ (
    jspb.Message.getWrapperField(this, proto.card_custompay.Card, 3));
};


/**
 * @param {?proto.card_custompay.Card|undefined} value
 * @return {!proto.card_custompay.CardResponse} returns this
*/
proto.card_custompay.CardResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.card_custompay.CardResponse} returns this
 */
proto.card_custompay.CardResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.card_custompay.CardResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_custompay.CardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.card_custompay.CardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_custompay.CardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardIdx: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_custompay.CardRequest}
 */
proto.card_custompay.CardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_custompay.CardRequest;
  return proto.card_custompay.CardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_custompay.CardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_custompay.CardRequest}
 */
proto.card_custompay.CardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardIdx(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_custompay.CardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_custompay.CardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_custompay.CardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardIdx();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 card_idx = 1;
 * @return {number}
 */
proto.card_custompay.CardRequest.prototype.getCardIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_custompay.CardRequest} returns this
 */
proto.card_custompay.CardRequest.prototype.setCardIdx = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.card_custompay.CardAllInfoResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_custompay.CardAllInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.card_custompay.CardAllInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_custompay.CardAllInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardAllInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    responseList: jspb.Message.toObjectList(msg.getResponseList(),
    proto.card_custompay.Card.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_custompay.CardAllInfoResponse}
 */
proto.card_custompay.CardAllInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_custompay.CardAllInfoResponse;
  return proto.card_custompay.CardAllInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_custompay.CardAllInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_custompay.CardAllInfoResponse}
 */
proto.card_custompay.CardAllInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.card_custompay.Card;
      reader.readMessage(value,proto.card_custompay.Card.deserializeBinaryFromReader);
      msg.addResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_custompay.CardAllInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_custompay.CardAllInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_custompay.CardAllInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardAllInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponseList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.card_custompay.Card.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.card_custompay.CardAllInfoResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_custompay.CardAllInfoResponse} returns this
 */
proto.card_custompay.CardAllInfoResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.card_custompay.CardAllInfoResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardAllInfoResponse} returns this
 */
proto.card_custompay.CardAllInfoResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Card response = 3;
 * @return {!Array<!proto.card_custompay.Card>}
 */
proto.card_custompay.CardAllInfoResponse.prototype.getResponseList = function() {
  return /** @type{!Array<!proto.card_custompay.Card>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.card_custompay.Card, 3));
};


/**
 * @param {!Array<!proto.card_custompay.Card>} value
 * @return {!proto.card_custompay.CardAllInfoResponse} returns this
*/
proto.card_custompay.CardAllInfoResponse.prototype.setResponseList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.card_custompay.Card=} opt_value
 * @param {number=} opt_index
 * @return {!proto.card_custompay.Card}
 */
proto.card_custompay.CardAllInfoResponse.prototype.addResponse = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.card_custompay.Card, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.card_custompay.CardAllInfoResponse} returns this
 */
proto.card_custompay.CardAllInfoResponse.prototype.clearResponseList = function() {
  return this.setResponseList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_custompay.CardEditRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.card_custompay.CardEditRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_custompay.CardEditRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardEditRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardIdx: jspb.Message.getFieldWithDefault(msg, 1, 0),
    alias: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_custompay.CardEditRequest}
 */
proto.card_custompay.CardEditRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_custompay.CardEditRequest;
  return proto.card_custompay.CardEditRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_custompay.CardEditRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_custompay.CardEditRequest}
 */
proto.card_custompay.CardEditRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardIdx(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_custompay.CardEditRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_custompay.CardEditRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_custompay.CardEditRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardEditRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardIdx();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAlias();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 card_idx = 1;
 * @return {number}
 */
proto.card_custompay.CardEditRequest.prototype.getCardIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_custompay.CardEditRequest} returns this
 */
proto.card_custompay.CardEditRequest.prototype.setCardIdx = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string alias = 2;
 * @return {string}
 */
proto.card_custompay.CardEditRequest.prototype.getAlias = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardEditRequest} returns this
 */
proto.card_custompay.CardEditRequest.prototype.setAlias = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_custompay.CardPayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.card_custompay.CardPayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_custompay.CardPayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardPayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardIdx: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cardUid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    merchantUid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dutyFreeAmount: jspb.Message.getFieldWithDefault(msg, 5, ""),
    orderName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    cardInstallment: jspb.Message.getFieldWithDefault(msg, 7, 0),
    interestFreeByMerchant: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    customData: jspb.Message.getFieldWithDefault(msg, 9, ""),
    callbackUrl: jspb.Message.getFieldWithDefault(msg, 10, ""),
    hashedPin: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_custompay.CardPayRequest}
 */
proto.card_custompay.CardPayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_custompay.CardPayRequest;
  return proto.card_custompay.CardPayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_custompay.CardPayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_custompay.CardPayRequest}
 */
proto.card_custompay.CardPayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardIdx(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardUid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantUid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDutyFreeAmount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderName(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardInstallment(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInterestFreeByMerchant(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomData(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallbackUrl(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setHashedPin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_custompay.CardPayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_custompay.CardPayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_custompay.CardPayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardPayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardIdx();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCardUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMerchantUid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDutyFreeAmount();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOrderName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCardInstallment();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getInterestFreeByMerchant();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getCustomData();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCallbackUrl();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getHashedPin();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional int32 card_idx = 1;
 * @return {number}
 */
proto.card_custompay.CardPayRequest.prototype.getCardIdx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_custompay.CardPayRequest} returns this
 */
proto.card_custompay.CardPayRequest.prototype.setCardIdx = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string card_uid = 2;
 * @return {string}
 */
proto.card_custompay.CardPayRequest.prototype.getCardUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardPayRequest} returns this
 */
proto.card_custompay.CardPayRequest.prototype.setCardUid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string merchant_uid = 3;
 * @return {string}
 */
proto.card_custompay.CardPayRequest.prototype.getMerchantUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardPayRequest} returns this
 */
proto.card_custompay.CardPayRequest.prototype.setMerchantUid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string amount = 4;
 * @return {string}
 */
proto.card_custompay.CardPayRequest.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardPayRequest} returns this
 */
proto.card_custompay.CardPayRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string duty_free_amount = 5;
 * @return {string}
 */
proto.card_custompay.CardPayRequest.prototype.getDutyFreeAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardPayRequest} returns this
 */
proto.card_custompay.CardPayRequest.prototype.setDutyFreeAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string order_name = 6;
 * @return {string}
 */
proto.card_custompay.CardPayRequest.prototype.getOrderName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardPayRequest} returns this
 */
proto.card_custompay.CardPayRequest.prototype.setOrderName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 card_installment = 7;
 * @return {number}
 */
proto.card_custompay.CardPayRequest.prototype.getCardInstallment = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.card_custompay.CardPayRequest} returns this
 */
proto.card_custompay.CardPayRequest.prototype.setCardInstallment = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool interest_free_by_merchant = 8;
 * @return {boolean}
 */
proto.card_custompay.CardPayRequest.prototype.getInterestFreeByMerchant = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.card_custompay.CardPayRequest} returns this
 */
proto.card_custompay.CardPayRequest.prototype.setInterestFreeByMerchant = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string custom_data = 9;
 * @return {string}
 */
proto.card_custompay.CardPayRequest.prototype.getCustomData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardPayRequest} returns this
 */
proto.card_custompay.CardPayRequest.prototype.setCustomData = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string callback_url = 10;
 * @return {string}
 */
proto.card_custompay.CardPayRequest.prototype.getCallbackUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardPayRequest} returns this
 */
proto.card_custompay.CardPayRequest.prototype.setCallbackUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string hashed_pin = 11;
 * @return {string}
 */
proto.card_custompay.CardPayRequest.prototype.getHashedPin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardPayRequest} returns this
 */
proto.card_custompay.CardPayRequest.prototype.setHashedPin = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.card_custompay.CardCancelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.card_custompay.CardCancelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.card_custompay.CardCancelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardCancelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    impUid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    merchantUid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dutyFreeAmount: jspb.Message.getFieldWithDefault(msg, 4, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.card_custompay.CardCancelRequest}
 */
proto.card_custompay.CardCancelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.card_custompay.CardCancelRequest;
  return proto.card_custompay.CardCancelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.card_custompay.CardCancelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.card_custompay.CardCancelRequest}
 */
proto.card_custompay.CardCancelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImpUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantUid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDutyFreeAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.card_custompay.CardCancelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.card_custompay.CardCancelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.card_custompay.CardCancelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.card_custompay.CardCancelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImpUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMerchantUid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDutyFreeAmount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string imp_uid = 1;
 * @return {string}
 */
proto.card_custompay.CardCancelRequest.prototype.getImpUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardCancelRequest} returns this
 */
proto.card_custompay.CardCancelRequest.prototype.setImpUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.card_custompay.CardCancelRequest.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardCancelRequest} returns this
 */
proto.card_custompay.CardCancelRequest.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string merchant_uid = 3;
 * @return {string}
 */
proto.card_custompay.CardCancelRequest.prototype.getMerchantUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardCancelRequest} returns this
 */
proto.card_custompay.CardCancelRequest.prototype.setMerchantUid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string duty_free_amount = 4;
 * @return {string}
 */
proto.card_custompay.CardCancelRequest.prototype.getDutyFreeAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardCancelRequest} returns this
 */
proto.card_custompay.CardCancelRequest.prototype.setDutyFreeAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string reason = 5;
 * @return {string}
 */
proto.card_custompay.CardCancelRequest.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.card_custompay.CardCancelRequest} returns this
 */
proto.card_custompay.CardCancelRequest.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


goog.object.extend(exports, proto.card_custompay);
