// source: subscribe_customers/subscribe_customers.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.subscribe_customers.CancelHistory', null, global);
goog.exportSymbol('proto.subscribe_customers.CustomerBillingKey', null, global);
goog.exportSymbol('proto.subscribe_customers.DeleteCustomerBillingKeyRequest', null, global);
goog.exportSymbol('proto.subscribe_customers.DeleteCustomerBillingKeyResponse', null, global);
goog.exportSymbol('proto.subscribe_customers.GetCustomerBillingKeyRequest', null, global);
goog.exportSymbol('proto.subscribe_customers.GetCustomerBillingKeyResponse', null, global);
goog.exportSymbol('proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest', null, global);
goog.exportSymbol('proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse', null, global);
goog.exportSymbol('proto.subscribe_customers.GetPaidByBillingKeyListRequest', null, global);
goog.exportSymbol('proto.subscribe_customers.GetPaidByBillingKeyListResponse', null, global);
goog.exportSymbol('proto.subscribe_customers.InsertCustomerBillingKeyRequest', null, global);
goog.exportSymbol('proto.subscribe_customers.InsertCustomerBillingKeyResponse', null, global);
goog.exportSymbol('proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse', null, global);
goog.exportSymbol('proto.subscribe_customers.PaymentResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.CancelHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.CancelHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.CancelHistory.displayName = 'proto.subscribe_customers.CancelHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.PaymentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.subscribe_customers.PaymentResponse.repeatedFields_, null);
};
goog.inherits(proto.subscribe_customers.PaymentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.PaymentResponse.displayName = 'proto.subscribe_customers.PaymentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.CustomerBillingKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.CustomerBillingKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.CustomerBillingKey.displayName = 'proto.subscribe_customers.CustomerBillingKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.repeatedFields_, null);
};
goog.inherits(proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.displayName = 'proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.repeatedFields_, null);
};
goog.inherits(proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.displayName = 'proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.DeleteCustomerBillingKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.DeleteCustomerBillingKeyRequest.displayName = 'proto.subscribe_customers.DeleteCustomerBillingKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.DeleteCustomerBillingKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.DeleteCustomerBillingKeyResponse.displayName = 'proto.subscribe_customers.DeleteCustomerBillingKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.GetCustomerBillingKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.GetCustomerBillingKeyRequest.displayName = 'proto.subscribe_customers.GetCustomerBillingKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.GetCustomerBillingKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.GetCustomerBillingKeyResponse.displayName = 'proto.subscribe_customers.GetCustomerBillingKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.InsertCustomerBillingKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.InsertCustomerBillingKeyRequest.displayName = 'proto.subscribe_customers.InsertCustomerBillingKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.InsertCustomerBillingKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.InsertCustomerBillingKeyResponse.displayName = 'proto.subscribe_customers.InsertCustomerBillingKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.GetPaidByBillingKeyListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.GetPaidByBillingKeyListRequest.displayName = 'proto.subscribe_customers.GetPaidByBillingKeyListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.repeatedFields_, null);
};
goog.inherits(proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.displayName = 'proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.subscribe_customers.GetPaidByBillingKeyListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.subscribe_customers.GetPaidByBillingKeyListResponse.displayName = 'proto.subscribe_customers.GetPaidByBillingKeyListResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.CancelHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.CancelHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.CancelHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.CancelHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    pgTid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cancelledAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 4, ""),
    receiptUrl: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.CancelHistory}
 */
proto.subscribe_customers.CancelHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.CancelHistory;
  return proto.subscribe_customers.CancelHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.CancelHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.CancelHistory}
 */
proto.subscribe_customers.CancelHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgTid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCancelledAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiptUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.CancelHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.CancelHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.CancelHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.CancelHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPgTid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCancelledAt();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getReceiptUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string pg_tid = 1;
 * @return {string}
 */
proto.subscribe_customers.CancelHistory.prototype.getPgTid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CancelHistory} returns this
 */
proto.subscribe_customers.CancelHistory.prototype.setPgTid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 amount = 2;
 * @return {number}
 */
proto.subscribe_customers.CancelHistory.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.CancelHistory} returns this
 */
proto.subscribe_customers.CancelHistory.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 cancelled_at = 3;
 * @return {number}
 */
proto.subscribe_customers.CancelHistory.prototype.getCancelledAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.CancelHistory} returns this
 */
proto.subscribe_customers.CancelHistory.prototype.setCancelledAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string reason = 4;
 * @return {string}
 */
proto.subscribe_customers.CancelHistory.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CancelHistory} returns this
 */
proto.subscribe_customers.CancelHistory.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string receipt_url = 5;
 * @return {string}
 */
proto.subscribe_customers.CancelHistory.prototype.getReceiptUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CancelHistory} returns this
 */
proto.subscribe_customers.CancelHistory.prototype.setReceiptUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.subscribe_customers.PaymentResponse.repeatedFields_ = [45,46];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.PaymentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.PaymentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.PaymentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.PaymentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    cancelAmount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    bankCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    vbankDate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    cardCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    customerUidUsage: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pgId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    escrow: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    failedAt: jspb.Message.getFieldWithDefault(msg, 8, 0),
    buyerAddr: jspb.Message.getFieldWithDefault(msg, 9, ""),
    applyNum: jspb.Message.getFieldWithDefault(msg, 10, ""),
    cardName: jspb.Message.getFieldWithDefault(msg, 11, ""),
    cancelledAt: jspb.Message.getFieldWithDefault(msg, 12, 0),
    pgTid: jspb.Message.getFieldWithDefault(msg, 13, ""),
    vbankHolder: jspb.Message.getFieldWithDefault(msg, 14, ""),
    vbankName: jspb.Message.getFieldWithDefault(msg, 15, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 16, ""),
    buyerName: jspb.Message.getFieldWithDefault(msg, 17, ""),
    cardNumber: jspb.Message.getFieldWithDefault(msg, 18, ""),
    startedAt: jspb.Message.getFieldWithDefault(msg, 19, 0),
    merchantUid: jspb.Message.getFieldWithDefault(msg, 20, ""),
    vbankNum: jspb.Message.getFieldWithDefault(msg, 21, ""),
    customerUid: jspb.Message.getFieldWithDefault(msg, 22, ""),
    failReason: jspb.Message.getFieldWithDefault(msg, 23, ""),
    impUid: jspb.Message.getFieldWithDefault(msg, 24, ""),
    buyerPostcode: jspb.Message.getFieldWithDefault(msg, 25, ""),
    paidAt: jspb.Message.getFieldWithDefault(msg, 26, 0),
    pgProvider: jspb.Message.getFieldWithDefault(msg, 27, ""),
    bankName: jspb.Message.getFieldWithDefault(msg, 28, ""),
    vbankIssuedAt: jspb.Message.getFieldWithDefault(msg, 29, 0),
    vbankCode: jspb.Message.getFieldWithDefault(msg, 30, ""),
    receiptUrl: jspb.Message.getFieldWithDefault(msg, 31, ""),
    cardQuota: jspb.Message.getFieldWithDefault(msg, 32, 0),
    buyerEmail: jspb.Message.getFieldWithDefault(msg, 33, ""),
    userAgent: jspb.Message.getFieldWithDefault(msg, 34, ""),
    status: jspb.Message.getFieldWithDefault(msg, 35, ""),
    cancelReason: jspb.Message.getFieldWithDefault(msg, 36, ""),
    customData: jspb.Message.getFieldWithDefault(msg, 37, ""),
    cashReceiptIssued: jspb.Message.getBooleanFieldWithDefault(msg, 38, false),
    cardType: jspb.Message.getFieldWithDefault(msg, 39, 0),
    buyerTel: jspb.Message.getFieldWithDefault(msg, 40, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 41, 0),
    name: jspb.Message.getFieldWithDefault(msg, 42, ""),
    payMethod: jspb.Message.getFieldWithDefault(msg, 43, ""),
    channel: jspb.Message.getFieldWithDefault(msg, 44, ""),
    cancelReceiptUrlsList: (f = jspb.Message.getRepeatedField(msg, 45)) == null ? undefined : f,
    cancelHistoryList: jspb.Message.toObjectList(msg.getCancelHistoryList(),
    proto.subscribe_customers.CancelHistory.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.PaymentResponse}
 */
proto.subscribe_customers.PaymentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.PaymentResponse;
  return proto.subscribe_customers.PaymentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.PaymentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.PaymentResponse}
 */
proto.subscribe_customers.PaymentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCancelAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankCode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVbankDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUidUsage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgId(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEscrow(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFailedAt(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerAddr(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplyNum(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardName(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCancelledAt(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgTid(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setVbankHolder(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setVbankName(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerName(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardNumber(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStartedAt(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchantUid(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setVbankNum(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUid(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailReason(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setImpUid(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerPostcode(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaidAt(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgProvider(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankName(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVbankIssuedAt(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setVbankCode(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiptUrl(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardQuota(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerEmail(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserAgent(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancelReason(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomData(value);
      break;
    case 38:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCashReceiptIssued(value);
      break;
    case 39:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardType(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyerTel(value);
      break;
    case 41:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmount(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 43:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayMethod(value);
      break;
    case 44:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 45:
      var value = /** @type {string} */ (reader.readString());
      msg.addCancelReceiptUrls(value);
      break;
    case 46:
      var value = new proto.subscribe_customers.CancelHistory;
      reader.readMessage(value,proto.subscribe_customers.CancelHistory.deserializeBinaryFromReader);
      msg.addCancelHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.PaymentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.PaymentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.PaymentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.PaymentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCancelAmount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getBankCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVbankDate();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCardCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCustomerUidUsage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPgId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEscrow();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getFailedAt();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getBuyerAddr();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getApplyNum();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCardName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCancelledAt();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getPgTid();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getVbankHolder();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getVbankName();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getBuyerName();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getCardNumber();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getStartedAt();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getMerchantUid();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getVbankNum();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getCustomerUid();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getFailReason();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getImpUid();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getBuyerPostcode();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getPaidAt();
  if (f !== 0) {
    writer.writeInt32(
      26,
      f
    );
  }
  f = message.getPgProvider();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getBankName();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getVbankIssuedAt();
  if (f !== 0) {
    writer.writeInt32(
      29,
      f
    );
  }
  f = message.getVbankCode();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getReceiptUrl();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getCardQuota();
  if (f !== 0) {
    writer.writeInt32(
      32,
      f
    );
  }
  f = message.getBuyerEmail();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getUserAgent();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getCancelReason();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getCustomData();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getCashReceiptIssued();
  if (f) {
    writer.writeBool(
      38,
      f
    );
  }
  f = message.getCardType();
  if (f !== 0) {
    writer.writeInt32(
      39,
      f
    );
  }
  f = message.getBuyerTel();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt32(
      41,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      42,
      f
    );
  }
  f = message.getPayMethod();
  if (f.length > 0) {
    writer.writeString(
      43,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      44,
      f
    );
  }
  f = message.getCancelReceiptUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      45,
      f
    );
  }
  f = message.getCancelHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      46,
      f,
      proto.subscribe_customers.CancelHistory.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 cancel_amount = 1;
 * @return {number}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCancelAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCancelAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string bank_code = 2;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getBankCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setBankCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 vbank_date = 3;
 * @return {number}
 */
proto.subscribe_customers.PaymentResponse.prototype.getVbankDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setVbankDate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string card_code = 4;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCardCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCardCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string customer_uid_usage = 5;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCustomerUidUsage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCustomerUidUsage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string pg_id = 6;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getPgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setPgId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool escrow = 7;
 * @return {boolean}
 */
proto.subscribe_customers.PaymentResponse.prototype.getEscrow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setEscrow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int32 failed_at = 8;
 * @return {number}
 */
proto.subscribe_customers.PaymentResponse.prototype.getFailedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setFailedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string buyer_addr = 9;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getBuyerAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setBuyerAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string apply_num = 10;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getApplyNum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setApplyNum = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string card_name = 11;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCardName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCardName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int32 cancelled_at = 12;
 * @return {number}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCancelledAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCancelledAt = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string pg_tid = 13;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getPgTid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setPgTid = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string vbank_holder = 14;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getVbankHolder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setVbankHolder = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string vbank_name = 15;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getVbankName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setVbankName = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string currency = 16;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string buyer_name = 17;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getBuyerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setBuyerName = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string card_number = 18;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCardNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCardNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional int32 started_at = 19;
 * @return {number}
 */
proto.subscribe_customers.PaymentResponse.prototype.getStartedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setStartedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional string merchant_uid = 20;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getMerchantUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setMerchantUid = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string vbank_num = 21;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getVbankNum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setVbankNum = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string customer_uid = 22;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCustomerUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCustomerUid = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string fail_reason = 23;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getFailReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setFailReason = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string imp_uid = 24;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getImpUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setImpUid = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string buyer_postcode = 25;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getBuyerPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setBuyerPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional int32 paid_at = 26;
 * @return {number}
 */
proto.subscribe_customers.PaymentResponse.prototype.getPaidAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setPaidAt = function(value) {
  return jspb.Message.setProto3IntField(this, 26, value);
};


/**
 * optional string pg_provider = 27;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getPgProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setPgProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string bank_name = 28;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getBankName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setBankName = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional int32 vbank_issued_at = 29;
 * @return {number}
 */
proto.subscribe_customers.PaymentResponse.prototype.getVbankIssuedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setVbankIssuedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 29, value);
};


/**
 * optional string vbank_code = 30;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getVbankCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setVbankCode = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string receipt_url = 31;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getReceiptUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setReceiptUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional int32 card_quota = 32;
 * @return {number}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCardQuota = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCardQuota = function(value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional string buyer_email = 33;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getBuyerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setBuyerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string user_agent = 34;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getUserAgent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setUserAgent = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional string status = 35;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional string cancel_reason = 36;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCancelReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCancelReason = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string custom_data = 37;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCustomData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCustomData = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional bool cash_receipt_issued = 38;
 * @return {boolean}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCashReceiptIssued = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 38, false));
};


/**
 * @param {boolean} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCashReceiptIssued = function(value) {
  return jspb.Message.setProto3BooleanField(this, 38, value);
};


/**
 * optional int32 card_type = 39;
 * @return {number}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCardType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 39, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCardType = function(value) {
  return jspb.Message.setProto3IntField(this, 39, value);
};


/**
 * optional string buyer_tel = 40;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getBuyerTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setBuyerTel = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional int32 amount = 41;
 * @return {number}
 */
proto.subscribe_customers.PaymentResponse.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 41, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 41, value);
};


/**
 * optional string name = 42;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 42, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 42, value);
};


/**
 * optional string pay_method = 43;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getPayMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 43, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setPayMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 43, value);
};


/**
 * optional string channel = 44;
 * @return {string}
 */
proto.subscribe_customers.PaymentResponse.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 44, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 44, value);
};


/**
 * repeated string cancel_receipt_urls = 45;
 * @return {!Array<string>}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCancelReceiptUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 45));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.setCancelReceiptUrlsList = function(value) {
  return jspb.Message.setField(this, 45, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.addCancelReceiptUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 45, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.clearCancelReceiptUrlsList = function() {
  return this.setCancelReceiptUrlsList([]);
};


/**
 * repeated CancelHistory cancel_history = 46;
 * @return {!Array<!proto.subscribe_customers.CancelHistory>}
 */
proto.subscribe_customers.PaymentResponse.prototype.getCancelHistoryList = function() {
  return /** @type{!Array<!proto.subscribe_customers.CancelHistory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.subscribe_customers.CancelHistory, 46));
};


/**
 * @param {!Array<!proto.subscribe_customers.CancelHistory>} value
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
*/
proto.subscribe_customers.PaymentResponse.prototype.setCancelHistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 46, value);
};


/**
 * @param {!proto.subscribe_customers.CancelHistory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.subscribe_customers.CancelHistory}
 */
proto.subscribe_customers.PaymentResponse.prototype.addCancelHistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 46, opt_value, proto.subscribe_customers.CancelHistory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.subscribe_customers.PaymentResponse} returns this
 */
proto.subscribe_customers.PaymentResponse.prototype.clearCancelHistoryList = function() {
  return this.setCancelHistoryList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.CustomerBillingKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.CustomerBillingKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.CustomerBillingKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    cardCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cardName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cardNumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cardType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    customerAddr: jspb.Message.getFieldWithDefault(msg, 5, ""),
    customerEmail: jspb.Message.getFieldWithDefault(msg, 6, ""),
    customerName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    customerPostcode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    customerTel: jspb.Message.getFieldWithDefault(msg, 9, ""),
    customerUid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    inserted: jspb.Message.getFieldWithDefault(msg, 11, 0),
    pgId: jspb.Message.getFieldWithDefault(msg, 12, ""),
    pgProvider: jspb.Message.getFieldWithDefault(msg, 13, ""),
    updated: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.CustomerBillingKey}
 */
proto.subscribe_customers.CustomerBillingKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.CustomerBillingKey;
  return proto.subscribe_customers.CustomerBillingKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.CustomerBillingKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.CustomerBillingKey}
 */
proto.subscribe_customers.CustomerBillingKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardNumber(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCardType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerAddr(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerEmail(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerPostcode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerTel(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUid(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInserted(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgId(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPgProvider(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.CustomerBillingKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.CustomerBillingKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.CustomerBillingKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCardCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCardName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCardNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCardType();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCustomerAddr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCustomerEmail();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCustomerName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCustomerPostcode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCustomerTel();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCustomerUid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getInserted();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getPgId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPgProvider();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getUpdated();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
};


/**
 * optional string card_code = 1;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCardCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCardCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string card_name = 2;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCardName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCardName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string card_number = 3;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCardNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCardNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 card_type = 4;
 * @return {number}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCardType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCardType = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string customer_addr = 5;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCustomerAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCustomerAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string customer_email = 6;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCustomerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCustomerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string customer_name = 7;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCustomerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCustomerName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string customer_postcode = 8;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCustomerPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCustomerPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string customer_tel = 9;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCustomerTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCustomerTel = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string customer_uid = 10;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getCustomerUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setCustomerUid = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 inserted = 11;
 * @return {number}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getInserted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setInserted = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string pg_id = 12;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getPgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setPgId = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string pg_provider = 13;
 * @return {string}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getPgProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setPgProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional int32 updated = 14;
 * @return {number}
 */
proto.subscribe_customers.CustomerBillingKey.prototype.getUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.CustomerBillingKey} returns this
 */
proto.subscribe_customers.CustomerBillingKey.prototype.setUpdated = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerUidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest;
  return proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCustomerUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerUidList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string customer_uid = 1;
 * @return {!Array<string>}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.prototype.getCustomerUidList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.prototype.setCustomerUidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.prototype.addCustomerUid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyRequest.prototype.clearCustomerUidList = function() {
  return this.setCustomerUidList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    responseList: jspb.Message.toObjectList(msg.getResponseList(),
    proto.subscribe_customers.CustomerBillingKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse;
  return proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.subscribe_customers.CustomerBillingKey;
      reader.readMessage(value,proto.subscribe_customers.CustomerBillingKey.deserializeBinaryFromReader);
      msg.addResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponseList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.subscribe_customers.CustomerBillingKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated CustomerBillingKey response = 3;
 * @return {!Array<!proto.subscribe_customers.CustomerBillingKey>}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.getResponseList = function() {
  return /** @type{!Array<!proto.subscribe_customers.CustomerBillingKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.subscribe_customers.CustomerBillingKey, 3));
};


/**
 * @param {!Array<!proto.subscribe_customers.CustomerBillingKey>} value
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} returns this
*/
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.setResponseList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.subscribe_customers.CustomerBillingKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.subscribe_customers.CustomerBillingKey}
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.addResponse = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.subscribe_customers.CustomerBillingKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.GetMultipleCustomerBillingKeyResponse.prototype.clearResponseList = function() {
  return this.setResponseList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.DeleteCustomerBillingKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerUid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 2, ""),
    requester: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.DeleteCustomerBillingKeyRequest;
  return proto.subscribe_customers.DeleteCustomerBillingKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequester(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.DeleteCustomerBillingKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRequester();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string customer_uid = 1;
 * @return {string}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.getCustomerUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.setCustomerUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string requester = 3;
 * @return {string}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.getRequester = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.DeleteCustomerBillingKeyRequest.prototype.setRequester = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.DeleteCustomerBillingKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.subscribe_customers.CustomerBillingKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.DeleteCustomerBillingKeyResponse;
  return proto.subscribe_customers.DeleteCustomerBillingKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.subscribe_customers.CustomerBillingKey;
      reader.readMessage(value,proto.subscribe_customers.CustomerBillingKey.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.DeleteCustomerBillingKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.subscribe_customers.CustomerBillingKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CustomerBillingKey response = 3;
 * @return {?proto.subscribe_customers.CustomerBillingKey}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.getResponse = function() {
  return /** @type{?proto.subscribe_customers.CustomerBillingKey} */ (
    jspb.Message.getWrapperField(this, proto.subscribe_customers.CustomerBillingKey, 3));
};


/**
 * @param {?proto.subscribe_customers.CustomerBillingKey|undefined} value
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} returns this
*/
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.subscribe_customers.DeleteCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.subscribe_customers.DeleteCustomerBillingKeyResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.GetCustomerBillingKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.GetCustomerBillingKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerUid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyRequest}
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.GetCustomerBillingKeyRequest;
  return proto.subscribe_customers.GetCustomerBillingKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.GetCustomerBillingKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyRequest}
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.GetCustomerBillingKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.GetCustomerBillingKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string customer_uid = 1;
 * @return {string}
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.prototype.getCustomerUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.GetCustomerBillingKeyRequest.prototype.setCustomerUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.GetCustomerBillingKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.GetCustomerBillingKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.subscribe_customers.CustomerBillingKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyResponse}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.GetCustomerBillingKeyResponse;
  return proto.subscribe_customers.GetCustomerBillingKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.GetCustomerBillingKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyResponse}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.subscribe_customers.CustomerBillingKey;
      reader.readMessage(value,proto.subscribe_customers.CustomerBillingKey.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.GetCustomerBillingKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.GetCustomerBillingKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.subscribe_customers.CustomerBillingKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CustomerBillingKey response = 3;
 * @return {?proto.subscribe_customers.CustomerBillingKey}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.getResponse = function() {
  return /** @type{?proto.subscribe_customers.CustomerBillingKey} */ (
    jspb.Message.getWrapperField(this, proto.subscribe_customers.CustomerBillingKey, 3));
};


/**
 * @param {?proto.subscribe_customers.CustomerBillingKey|undefined} value
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyResponse} returns this
*/
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.subscribe_customers.GetCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.subscribe_customers.GetCustomerBillingKeyResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.InsertCustomerBillingKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerUid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cardNumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expiry: jspb.Message.getFieldWithDefault(msg, 4, ""),
    birth: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pwd2digit: jspb.Message.getFieldWithDefault(msg, 6, ""),
    customerName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    customerTel: jspb.Message.getFieldWithDefault(msg, 8, ""),
    customerEmail: jspb.Message.getFieldWithDefault(msg, 9, ""),
    customerAddr: jspb.Message.getFieldWithDefault(msg, 10, ""),
    customerPostcode: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.InsertCustomerBillingKeyRequest;
  return proto.subscribe_customers.InsertCustomerBillingKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPg(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCardNumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiry(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBirth(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPwd2digit(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerTel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerEmail(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerAddr(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerPostcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.InsertCustomerBillingKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCardNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpiry();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBirth();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPwd2digit();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCustomerName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCustomerTel();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCustomerEmail();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCustomerAddr();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCustomerPostcode();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string customer_uid = 1;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCustomerUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCustomerUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pg = 2;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getPg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setPg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string card_number = 3;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCardNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCardNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string expiry = 4;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getExpiry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setExpiry = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string birth = 5;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getBirth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setBirth = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string pwd_2digit = 6;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getPwd2digit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setPwd2digit = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string customer_name = 7;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCustomerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCustomerName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string customer_tel = 8;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCustomerTel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCustomerTel = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string customer_email = 9;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCustomerEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCustomerEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string customer_addr = 10;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCustomerAddr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCustomerAddr = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string customer_postcode = 11;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.getCustomerPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyRequest} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyRequest.prototype.setCustomerPostcode = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.InsertCustomerBillingKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.subscribe_customers.CustomerBillingKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyResponse}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.InsertCustomerBillingKeyResponse;
  return proto.subscribe_customers.InsertCustomerBillingKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyResponse}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.subscribe_customers.CustomerBillingKey;
      reader.readMessage(value,proto.subscribe_customers.CustomerBillingKey.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.InsertCustomerBillingKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.subscribe_customers.CustomerBillingKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CustomerBillingKey response = 3;
 * @return {?proto.subscribe_customers.CustomerBillingKey}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.getResponse = function() {
  return /** @type{?proto.subscribe_customers.CustomerBillingKey} */ (
    jspb.Message.getWrapperField(this, proto.subscribe_customers.CustomerBillingKey, 3));
};


/**
 * @param {?proto.subscribe_customers.CustomerBillingKey|undefined} value
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} returns this
*/
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.subscribe_customers.InsertCustomerBillingKeyResponse} returns this
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.subscribe_customers.InsertCustomerBillingKeyResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.GetPaidByBillingKeyListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.GetPaidByBillingKeyListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerUid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListRequest}
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.GetPaidByBillingKeyListRequest;
  return proto.subscribe_customers.GetPaidByBillingKeyListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.GetPaidByBillingKeyListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListRequest}
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerUid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.GetPaidByBillingKeyListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.GetPaidByBillingKeyListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string customer_uid = 1;
 * @return {string}
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.prototype.getCustomerUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListRequest} returns this
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.prototype.setCustomerUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 page = 2;
 * @return {number}
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListRequest} returns this
 */
proto.subscribe_customers.GetPaidByBillingKeyListRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, 0),
    previous: jspb.Message.getFieldWithDefault(msg, 2, 0),
    next: jspb.Message.getFieldWithDefault(msg, 3, 0),
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.subscribe_customers.PaymentResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse;
  return proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrevious(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNext(value);
      break;
    case 4:
      var value = new proto.subscribe_customers.PaymentResponse;
      reader.readMessage(value,proto.subscribe_customers.PaymentResponse.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPrevious();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getNext();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.subscribe_customers.PaymentResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 total = 1;
 * @return {number}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse} returns this
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 previous = 2;
 * @return {number}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.prototype.getPrevious = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse} returns this
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.prototype.setPrevious = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 next = 3;
 * @return {number}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.prototype.getNext = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse} returns this
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.prototype.setNext = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated PaymentResponse list = 4;
 * @return {!Array<!proto.subscribe_customers.PaymentResponse>}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.prototype.getListList = function() {
  return /** @type{!Array<!proto.subscribe_customers.PaymentResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.subscribe_customers.PaymentResponse, 4));
};


/**
 * @param {!Array<!proto.subscribe_customers.PaymentResponse>} value
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse} returns this
*/
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.subscribe_customers.PaymentResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.subscribe_customers.PaymentResponse}
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.subscribe_customers.PaymentResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse} returns this
 */
proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.prototype.clearListList = function() {
  return this.setListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.subscribe_customers.GetPaidByBillingKeyListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    response: (f = msg.getResponse()) && proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListResponse}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.subscribe_customers.GetPaidByBillingKeyListResponse;
  return proto.subscribe_customers.GetPaidByBillingKeyListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListResponse}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse;
      reader.readMessage(value,proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.subscribe_customers.GetPaidByBillingKeyListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} returns this
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} returns this
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional NestedGetPaidByBillingKeyListResponse response = 3;
 * @return {?proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.getResponse = function() {
  return /** @type{?proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse} */ (
    jspb.Message.getWrapperField(this, proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse, 3));
};


/**
 * @param {?proto.subscribe_customers.NestedGetPaidByBillingKeyListResponse|undefined} value
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} returns this
*/
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.setResponse = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.subscribe_customers.GetPaidByBillingKeyListResponse} returns this
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.clearResponse = function() {
  return this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.subscribe_customers.GetPaidByBillingKeyListResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.subscribe_customers);
