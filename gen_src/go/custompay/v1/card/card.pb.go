// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: custompay/v1/card/card.proto

package card

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	basic "github.com/iamport/interface/gen_src/go/custompay/v1/basic"
	payment "github.com/iamport/interface/gen_src/go/v1/payment"
	subscribe "github.com/iamport/interface/gen_src/go/v1/subscribe"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CardIdx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idx int32 `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
}

func (x *CardIdx) Reset() {
	*x = CardIdx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_custompay_v1_card_card_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardIdx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardIdx) ProtoMessage() {}

func (x *CardIdx) ProtoReflect() protoreflect.Message {
	mi := &file_custompay_v1_card_card_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardIdx.ProtoReflect.Descriptor instead.
func (*CardIdx) Descriptor() ([]byte, []int) {
	return file_custompay_v1_card_card_proto_rawDescGZIP(), []int{0}
}

func (x *CardIdx) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idx       int32  `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
	CardUid   string `protobuf:"bytes,2,opt,name=card_uid,json=cardUid,proto3" json:"card_uid,omitempty"`
	BinNumber string `protobuf:"bytes,3,opt,name=bin_number,json=binNumber,proto3" json:"bin_number,omitempty"`
	Provider  string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	Alias     string `protobuf:"bytes,5,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_custompay_v1_card_card_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_custompay_v1_card_card_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_custompay_v1_card_card_proto_rawDescGZIP(), []int{1}
}

func (x *Card) GetIdx() int32 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *Card) GetCardUid() string {
	if x != nil {
		return x.CardUid
	}
	return ""
}

func (x *Card) GetBinNumber() string {
	if x != nil {
		return x.BinNumber
	}
	return ""
}

func (x *Card) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Card) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type CardRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardIdx          string `protobuf:"bytes,1,opt,name=card_idx,json=cardIdx,proto3" json:"card_idx,omitempty"`
	Alias            string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	CustomerUid      string `protobuf:"bytes,3,opt,name=customer_uid,json=customerUid,proto3" json:"customer_uid,omitempty"`
	Pg               string `protobuf:"bytes,4,opt,name=pg,proto3" json:"pg,omitempty"`
	Expiry           string `protobuf:"bytes,5,opt,name=expiry,proto3" json:"expiry,omitempty"`
	Birth            string `protobuf:"bytes,6,opt,name=birth,proto3" json:"birth,omitempty"`
	Pwd_2Digit       string `protobuf:"bytes,7,opt,name=pwd_2digit,json=pwd2digit,proto3" json:"pwd_2digit,omitempty"`
	CustomerName     string `protobuf:"bytes,8,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	CustomerTel      string `protobuf:"bytes,9,opt,name=customer_tel,json=customerTel,proto3" json:"customer_tel,omitempty"`
	CustomerEmail    string `protobuf:"bytes,10,opt,name=customer_email,json=customerEmail,proto3" json:"customer_email,omitempty"`
	CustomerAddr     string `protobuf:"bytes,11,opt,name=customer_addr,json=customerAddr,proto3" json:"customer_addr,omitempty"`
	CustomerPostcode string `protobuf:"bytes,12,opt,name=customer_postcode,json=customerPostcode,proto3" json:"customer_postcode,omitempty"`
}

func (x *CardRegisterRequest) Reset() {
	*x = CardRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_custompay_v1_card_card_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRegisterRequest) ProtoMessage() {}

func (x *CardRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_custompay_v1_card_card_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRegisterRequest.ProtoReflect.Descriptor instead.
func (*CardRegisterRequest) Descriptor() ([]byte, []int) {
	return file_custompay_v1_card_card_proto_rawDescGZIP(), []int{2}
}

func (x *CardRegisterRequest) GetCardIdx() string {
	if x != nil {
		return x.CardIdx
	}
	return ""
}

func (x *CardRegisterRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *CardRegisterRequest) GetCustomerUid() string {
	if x != nil {
		return x.CustomerUid
	}
	return ""
}

func (x *CardRegisterRequest) GetPg() string {
	if x != nil {
		return x.Pg
	}
	return ""
}

func (x *CardRegisterRequest) GetExpiry() string {
	if x != nil {
		return x.Expiry
	}
	return ""
}

func (x *CardRegisterRequest) GetBirth() string {
	if x != nil {
		return x.Birth
	}
	return ""
}

func (x *CardRegisterRequest) GetPwd_2Digit() string {
	if x != nil {
		return x.Pwd_2Digit
	}
	return ""
}

func (x *CardRegisterRequest) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *CardRegisterRequest) GetCustomerTel() string {
	if x != nil {
		return x.CustomerTel
	}
	return ""
}

func (x *CardRegisterRequest) GetCustomerEmail() string {
	if x != nil {
		return x.CustomerEmail
	}
	return ""
}

func (x *CardRegisterRequest) GetCustomerAddr() string {
	if x != nil {
		return x.CustomerAddr
	}
	return ""
}

func (x *CardRegisterRequest) GetCustomerPostcode() string {
	if x != nil {
		return x.CustomerPostcode
	}
	return ""
}

type CardRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *CardIdx `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *CardRegisterResponse) Reset() {
	*x = CardRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_custompay_v1_card_card_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRegisterResponse) ProtoMessage() {}

func (x *CardRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_custompay_v1_card_card_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRegisterResponse.ProtoReflect.Descriptor instead.
func (*CardRegisterResponse) Descriptor() ([]byte, []int) {
	return file_custompay_v1_card_card_proto_rawDescGZIP(), []int{3}
}

func (x *CardRegisterResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CardRegisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CardRegisterResponse) GetResponse() *CardIdx {
	if x != nil {
		return x.Response
	}
	return nil
}

type CardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response *Card  `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *CardResponse) Reset() {
	*x = CardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_custompay_v1_card_card_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardResponse) ProtoMessage() {}

func (x *CardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_custompay_v1_card_card_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardResponse.ProtoReflect.Descriptor instead.
func (*CardResponse) Descriptor() ([]byte, []int) {
	return file_custompay_v1_card_card_proto_rawDescGZIP(), []int{4}
}

func (x *CardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CardResponse) GetResponse() *Card {
	if x != nil {
		return x.Response
	}
	return nil
}

type CardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardIdx int32 `protobuf:"varint,1,opt,name=card_idx,json=cardIdx,proto3" json:"card_idx,omitempty"`
}

func (x *CardRequest) Reset() {
	*x = CardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_custompay_v1_card_card_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRequest) ProtoMessage() {}

func (x *CardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_custompay_v1_card_card_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRequest.ProtoReflect.Descriptor instead.
func (*CardRequest) Descriptor() ([]byte, []int) {
	return file_custompay_v1_card_card_proto_rawDescGZIP(), []int{5}
}

func (x *CardRequest) GetCardIdx() int32 {
	if x != nil {
		return x.CardIdx
	}
	return 0
}

type CardAllInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Response []*Card `protobuf:"bytes,3,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *CardAllInfoResponse) Reset() {
	*x = CardAllInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_custompay_v1_card_card_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardAllInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardAllInfoResponse) ProtoMessage() {}

func (x *CardAllInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_custompay_v1_card_card_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardAllInfoResponse.ProtoReflect.Descriptor instead.
func (*CardAllInfoResponse) Descriptor() ([]byte, []int) {
	return file_custompay_v1_card_card_proto_rawDescGZIP(), []int{6}
}

func (x *CardAllInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CardAllInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CardAllInfoResponse) GetResponse() []*Card {
	if x != nil {
		return x.Response
	}
	return nil
}

type CardEditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardIdx int32  `protobuf:"varint,1,opt,name=card_idx,json=cardIdx,proto3" json:"card_idx,omitempty"`
	Alias   string `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *CardEditRequest) Reset() {
	*x = CardEditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_custompay_v1_card_card_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardEditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardEditRequest) ProtoMessage() {}

func (x *CardEditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_custompay_v1_card_card_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardEditRequest.ProtoReflect.Descriptor instead.
func (*CardEditRequest) Descriptor() ([]byte, []int) {
	return file_custompay_v1_card_card_proto_rawDescGZIP(), []int{7}
}

func (x *CardEditRequest) GetCardIdx() int32 {
	if x != nil {
		return x.CardIdx
	}
	return 0
}

func (x *CardEditRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type CardPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardIdx                int32  `protobuf:"varint,1,opt,name=card_idx,json=cardIdx,proto3" json:"card_idx,omitempty"`
	CardUid                string `protobuf:"bytes,2,opt,name=card_uid,json=cardUid,proto3" json:"card_uid,omitempty"`
	MerchantUid            string `protobuf:"bytes,3,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	Amount                 string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	DutyFreeAmount         string `protobuf:"bytes,5,opt,name=duty_free_amount,json=dutyFreeAmount,proto3" json:"duty_free_amount,omitempty"`
	OrderName              string `protobuf:"bytes,6,opt,name=order_name,json=orderName,proto3" json:"order_name,omitempty"`
	CardInstallment        int32  `protobuf:"varint,7,opt,name=card_installment,json=cardInstallment,proto3" json:"card_installment,omitempty"`
	InterestFreeByMerchant bool   `protobuf:"varint,8,opt,name=interest_free_by_merchant,json=interestFreeByMerchant,proto3" json:"interest_free_by_merchant,omitempty"`
	CustomData             string `protobuf:"bytes,9,opt,name=custom_data,json=customData,proto3" json:"custom_data,omitempty"`
	CallbackUrl            string `protobuf:"bytes,10,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
	HashedPin              string `protobuf:"bytes,11,opt,name=hashed_pin,json=hashedPin,proto3" json:"hashed_pin,omitempty"`
}

func (x *CardPayRequest) Reset() {
	*x = CardPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_custompay_v1_card_card_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardPayRequest) ProtoMessage() {}

func (x *CardPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_custompay_v1_card_card_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardPayRequest.ProtoReflect.Descriptor instead.
func (*CardPayRequest) Descriptor() ([]byte, []int) {
	return file_custompay_v1_card_card_proto_rawDescGZIP(), []int{8}
}

func (x *CardPayRequest) GetCardIdx() int32 {
	if x != nil {
		return x.CardIdx
	}
	return 0
}

func (x *CardPayRequest) GetCardUid() string {
	if x != nil {
		return x.CardUid
	}
	return ""
}

func (x *CardPayRequest) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *CardPayRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CardPayRequest) GetDutyFreeAmount() string {
	if x != nil {
		return x.DutyFreeAmount
	}
	return ""
}

func (x *CardPayRequest) GetOrderName() string {
	if x != nil {
		return x.OrderName
	}
	return ""
}

func (x *CardPayRequest) GetCardInstallment() int32 {
	if x != nil {
		return x.CardInstallment
	}
	return 0
}

func (x *CardPayRequest) GetInterestFreeByMerchant() bool {
	if x != nil {
		return x.InterestFreeByMerchant
	}
	return false
}

func (x *CardPayRequest) GetCustomData() string {
	if x != nil {
		return x.CustomData
	}
	return ""
}

func (x *CardPayRequest) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

func (x *CardPayRequest) GetHashedPin() string {
	if x != nil {
		return x.HashedPin
	}
	return ""
}

type CardCancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImpUid         string `protobuf:"bytes,1,opt,name=imp_uid,json=impUid,proto3" json:"imp_uid,omitempty"`
	Amount         string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	MerchantUid    string `protobuf:"bytes,3,opt,name=merchant_uid,json=merchantUid,proto3" json:"merchant_uid,omitempty"`
	DutyFreeAmount string `protobuf:"bytes,4,opt,name=duty_free_amount,json=dutyFreeAmount,proto3" json:"duty_free_amount,omitempty"`
	Reason         string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *CardCancelRequest) Reset() {
	*x = CardCancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_custompay_v1_card_card_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardCancelRequest) ProtoMessage() {}

func (x *CardCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_custompay_v1_card_card_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardCancelRequest.ProtoReflect.Descriptor instead.
func (*CardCancelRequest) Descriptor() ([]byte, []int) {
	return file_custompay_v1_card_card_proto_rawDescGZIP(), []int{9}
}

func (x *CardCancelRequest) GetImpUid() string {
	if x != nil {
		return x.ImpUid
	}
	return ""
}

func (x *CardCancelRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CardCancelRequest) GetMerchantUid() string {
	if x != nil {
		return x.MerchantUid
	}
	return ""
}

func (x *CardCancelRequest) GetDutyFreeAmount() string {
	if x != nil {
		return x.DutyFreeAmount
	}
	return ""
}

func (x *CardCancelRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_custompay_v1_card_card_proto protoreflect.FileDescriptor

var file_custompay_v1_card_card_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x61, 0x72, 0x64, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x79, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x70, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x76, 0x31, 0x2f, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x1b, 0x0a, 0x07, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x78, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x78, 0x22, 0x84,
	0x01, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72,
	0x64, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x6e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x87, 0x03, 0x0a, 0x13, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x55, 0x69,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70,
	0x67, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x69, 0x72, 0x74, 0x68, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x77, 0x64, 0x5f, 0x32, 0x64, 0x69, 0x67, 0x69, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x77, 0x64, 0x32, 0x64, 0x69, 0x67, 0x69, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x74, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x79, 0x0a, 0x14, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x78,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e, 0x0a, 0x0c, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x0b, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x78, 0x22, 0x75, 0x0a, 0x13, 0x43, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x0a, 0x0f, 0x43,
	0x61, 0x72, 0x64, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22,
	0x93, 0x03, 0x0a, 0x0e, 0x43, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x78, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x64, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x75, 0x74, 0x79, 0x5f, 0x66, 0x72, 0x65, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x75, 0x74, 0x79, 0x46, 0x72, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x62, 0x79, 0x5f, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x46, 0x72, 0x65, 0x65, 0x42, 0x79, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x70, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x73, 0x68,
	0x65, 0x64, 0x50, 0x69, 0x6e, 0x22, 0xa9, 0x01, 0x0a, 0x11, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x6d, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d,
	0x70, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x69, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x64, 0x75, 0x74, 0x79, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x75, 0x74, 0x79, 0x46,
	0x72, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x32, 0xe8, 0x06, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x6e, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x50, 0x43, 0x12, 0x23, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x22, 0x05, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x3a, 0x01,
	0x2a, 0x12, 0x61, 0x0a, 0x0e, 0x43, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x50, 0x43, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x2f,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x61, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x61, 0x69, 0x6e,
	0x52, 0x50, 0x43, 0x12, 0x1b, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70,
	0x61, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f,
	0x6d, 0x61, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x67, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x50, 0x43, 0x12, 0x1b, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x63, 0x61, 0x72, 0x64,
	0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x7d,
	0x12, 0x66, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x50,
	0x43, 0x12, 0x1b, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70,
	0x61, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x79,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x2a, 0x15, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x78, 0x7d, 0x12, 0x6b, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x64,
	0x45, 0x64, 0x69, 0x74, 0x52, 0x50, 0x43, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x45, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x32, 0x15, 0x2f, 0x63, 0x61,
	0x72, 0x64, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x78, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x6e, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79,
	0x52, 0x50, 0x43, 0x12, 0x1e, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e,
	0x41, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x63,
	0x61, 0x72, 0x64, 0x2f, 0x70, 0x61, 0x79, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x78, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x75, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x52, 0x50, 0x43, 0x12, 0x21, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61, 0x79, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x22, 0x16, 0x2f, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2f,
	0x7b, 0x69, 0x6d, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x42, 0x4f, 0x5a, 0x39,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x61, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x67, 0x65, 0x6e,
	0x5f, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x70, 0x61,
	0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x64, 0xaa, 0x02, 0x11, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x70, 0x61, 0x79, 0x2e, 0x56, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_custompay_v1_card_card_proto_rawDescOnce sync.Once
	file_custompay_v1_card_card_proto_rawDescData = file_custompay_v1_card_card_proto_rawDesc
)

func file_custompay_v1_card_card_proto_rawDescGZIP() []byte {
	file_custompay_v1_card_card_proto_rawDescOnce.Do(func() {
		file_custompay_v1_card_card_proto_rawDescData = protoimpl.X.CompressGZIP(file_custompay_v1_card_card_proto_rawDescData)
	})
	return file_custompay_v1_card_card_proto_rawDescData
}

var file_custompay_v1_card_card_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_custompay_v1_card_card_proto_goTypes = []interface{}{
	(*CardIdx)(nil),                        // 0: card_custompay.CardIdx
	(*Card)(nil),                           // 1: card_custompay.Card
	(*CardRegisterRequest)(nil),            // 2: card_custompay.CardRegisterRequest
	(*CardRegisterResponse)(nil),           // 3: card_custompay.CardRegisterResponse
	(*CardResponse)(nil),                   // 4: card_custompay.CardResponse
	(*CardRequest)(nil),                    // 5: card_custompay.CardRequest
	(*CardAllInfoResponse)(nil),            // 6: card_custompay.CardAllInfoResponse
	(*CardEditRequest)(nil),                // 7: card_custompay.CardEditRequest
	(*CardPayRequest)(nil),                 // 8: card_custompay.CardPayRequest
	(*CardCancelRequest)(nil),              // 9: card_custompay.CardCancelRequest
	(*empty.Empty)(nil),                    // 10: google.protobuf.Empty
	(*basic.Response)(nil),                 // 11: basic_custompay.Response
	(*subscribe.AgainPaymentResponse)(nil), // 12: subscribe.AgainPaymentResponse
	(*payment.PaymentCancelResponse)(nil),  // 13: payment.PaymentCancelResponse
}
var file_custompay_v1_card_card_proto_depIdxs = []int32{
	0,  // 0: card_custompay.CardRegisterResponse.response:type_name -> card_custompay.CardIdx
	1,  // 1: card_custompay.CardResponse.response:type_name -> card_custompay.Card
	1,  // 2: card_custompay.CardAllInfoResponse.response:type_name -> card_custompay.Card
	2,  // 3: card_custompay.UserService.CardRegisterRPC:input_type -> card_custompay.CardRegisterRequest
	10, // 4: card_custompay.UserService.CardAllInfoRPC:input_type -> google.protobuf.Empty
	5,  // 5: card_custompay.UserService.CardMainRPC:input_type -> card_custompay.CardRequest
	5,  // 6: card_custompay.UserService.CardInfoRPC:input_type -> card_custompay.CardRequest
	5,  // 7: card_custompay.UserService.CardDeleteRPC:input_type -> card_custompay.CardRequest
	7,  // 8: card_custompay.UserService.CardEditRPC:input_type -> card_custompay.CardEditRequest
	8,  // 9: card_custompay.UserService.CardPayRPC:input_type -> card_custompay.CardPayRequest
	9,  // 10: card_custompay.UserService.CardCancelRPC:input_type -> card_custompay.CardCancelRequest
	3,  // 11: card_custompay.UserService.CardRegisterRPC:output_type -> card_custompay.CardRegisterResponse
	6,  // 12: card_custompay.UserService.CardAllInfoRPC:output_type -> card_custompay.CardAllInfoResponse
	11, // 13: card_custompay.UserService.CardMainRPC:output_type -> basic_custompay.Response
	4,  // 14: card_custompay.UserService.CardInfoRPC:output_type -> card_custompay.CardResponse
	11, // 15: card_custompay.UserService.CardDeleteRPC:output_type -> basic_custompay.Response
	11, // 16: card_custompay.UserService.CardEditRPC:output_type -> basic_custompay.Response
	12, // 17: card_custompay.UserService.CardPayRPC:output_type -> subscribe.AgainPaymentResponse
	13, // 18: card_custompay.UserService.CardCancelRPC:output_type -> payment.PaymentCancelResponse
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_custompay_v1_card_card_proto_init() }
func file_custompay_v1_card_card_proto_init() {
	if File_custompay_v1_card_card_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_custompay_v1_card_card_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardIdx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_custompay_v1_card_card_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_custompay_v1_card_card_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_custompay_v1_card_card_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_custompay_v1_card_card_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_custompay_v1_card_card_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_custompay_v1_card_card_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardAllInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_custompay_v1_card_card_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardEditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_custompay_v1_card_card_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_custompay_v1_card_card_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardCancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_custompay_v1_card_card_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_custompay_v1_card_card_proto_goTypes,
		DependencyIndexes: file_custompay_v1_card_card_proto_depIdxs,
		MessageInfos:      file_custompay_v1_card_card_proto_msgTypes,
	}.Build()
	File_custompay_v1_card_card_proto = out.File
	file_custompay_v1_card_card_proto_rawDesc = nil
	file_custompay_v1_card_card_proto_goTypes = nil
	file_custompay_v1_card_card_proto_depIdxs = nil
}
